/* tslint:disable */
/* eslint-disable */
/**
 * VOICEVOX Engine
 * VOICEVOX の音声合成エンジンです。
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * エンジンが持つ機能の一覧
 * @export
 * @interface SupportedFeatures
 */
export interface SupportedFeatures {
    /**
     * モーラごとの音高の調整
     * @type {boolean}
     * @memberof SupportedFeatures
     */
    adjustMoraPitch: boolean;
    /**
     * 音素ごとの長さの調整
     * @type {boolean}
     * @memberof SupportedFeatures
     */
    adjustPhonemeLength: boolean;
    /**
     * 全体の話速の調整
     * @type {boolean}
     * @memberof SupportedFeatures
     */
    adjustSpeedScale: boolean;
    /**
     * 全体の音高の調整
     * @type {boolean}
     * @memberof SupportedFeatures
     */
    adjustPitchScale: boolean;
    /**
     * 全体の抑揚の調整
     * @type {boolean}
     * @memberof SupportedFeatures
     */
    adjustIntonationScale: boolean;
    /**
     * 全体の音量の調整
     * @type {boolean}
     * @memberof SupportedFeatures
     */
    adjustVolumeScale: boolean;
    /**
     * 句読点などの無音時間の調整
     * @type {boolean}
     * @memberof SupportedFeatures
     */
    adjustPauseLength?: boolean;
    /**
     * 疑問文の自動調整
     * @type {boolean}
     * @memberof SupportedFeatures
     */
    interrogativeUpspeak: boolean;
    /**
     * 2種類のスタイルでモーフィングした音声を合成
     * @type {boolean}
     * @memberof SupportedFeatures
     */
    synthesisMorphing: boolean;
    /**
     * 歌唱音声合成
     * @type {boolean}
     * @memberof SupportedFeatures
     */
    sing?: boolean;
    /**
     * 音声ライブラリのインストール・アンインストール
     * @type {boolean}
     * @memberof SupportedFeatures
     */
    manageLibrary?: boolean;
    /**
     * キャラクター情報のリソースをURLで返送
     * @type {boolean}
     * @memberof SupportedFeatures
     */
    returnResourceUrl?: boolean;
}

/**
 * Check if a given object implements the SupportedFeatures interface.
 */
export function instanceOfSupportedFeatures(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "adjustMoraPitch" in value;
    isInstance = isInstance && "adjustPhonemeLength" in value;
    isInstance = isInstance && "adjustSpeedScale" in value;
    isInstance = isInstance && "adjustPitchScale" in value;
    isInstance = isInstance && "adjustIntonationScale" in value;
    isInstance = isInstance && "adjustVolumeScale" in value;
    isInstance = isInstance && "interrogativeUpspeak" in value;
    isInstance = isInstance && "synthesisMorphing" in value;

    return isInstance;
}

export function SupportedFeaturesFromJSON(json: any): SupportedFeatures {
    return SupportedFeaturesFromJSONTyped(json, false);
}

export function SupportedFeaturesFromJSONTyped(json: any, ignoreDiscriminator: boolean): SupportedFeatures {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'adjustMoraPitch': json['adjust_mora_pitch'],
        'adjustPhonemeLength': json['adjust_phoneme_length'],
        'adjustSpeedScale': json['adjust_speed_scale'],
        'adjustPitchScale': json['adjust_pitch_scale'],
        'adjustIntonationScale': json['adjust_intonation_scale'],
        'adjustVolumeScale': json['adjust_volume_scale'],
        'adjustPauseLength': !exists(json, 'adjust_pause_length') ? undefined : json['adjust_pause_length'],
        'interrogativeUpspeak': json['interrogative_upspeak'],
        'synthesisMorphing': json['synthesis_morphing'],
        'sing': !exists(json, 'sing') ? undefined : json['sing'],
        'manageLibrary': !exists(json, 'manage_library') ? undefined : json['manage_library'],
        'returnResourceUrl': !exists(json, 'return_resource_url') ? undefined : json['return_resource_url'],
    };
}

export function SupportedFeaturesToJSON(value?: SupportedFeatures | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'adjust_mora_pitch': value.adjustMoraPitch,
        'adjust_phoneme_length': value.adjustPhonemeLength,
        'adjust_speed_scale': value.adjustSpeedScale,
        'adjust_pitch_scale': value.adjustPitchScale,
        'adjust_intonation_scale': value.adjustIntonationScale,
        'adjust_volume_scale': value.adjustVolumeScale,
        'adjust_pause_length': value.adjustPauseLength,
        'interrogative_upspeak': value.interrogativeUpspeak,
        'synthesis_morphing': value.synthesisMorphing,
        'sing': value.sing,
        'manage_library': value.manageLibrary,
        'return_resource_url': value.returnResourceUrl,
    };
}

