/* tslint:disable */
/* eslint-disable */
/**
 * VOICEVOX Engine
 * VOICEVOX の音声合成エンジンです。
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * キャラクターの対応機能の情報
 * @export
 * @interface SpeakerSupportedFeatures
 */
export interface SpeakerSupportedFeatures {
    /**
     * モーフィング機能への対応。'ALL' は「全て許可」、'SELF_ONLY' は「同じキャラクター内でのみ許可」、'NOTHING' は「全て禁止」
     * @type {string}
     * @memberof SpeakerSupportedFeatures
     */
    permittedSynthesisMorphing?: SpeakerSupportedFeaturesPermittedSynthesisMorphingEnum;
}


/**
 * @export
 */
export const SpeakerSupportedFeaturesPermittedSynthesisMorphingEnum = {
    All: 'ALL',
    SelfOnly: 'SELF_ONLY',
    Nothing: 'NOTHING'
} as const;
export type SpeakerSupportedFeaturesPermittedSynthesisMorphingEnum = typeof SpeakerSupportedFeaturesPermittedSynthesisMorphingEnum[keyof typeof SpeakerSupportedFeaturesPermittedSynthesisMorphingEnum];


/**
 * Check if a given object implements the SpeakerSupportedFeatures interface.
 */
export function instanceOfSpeakerSupportedFeatures(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SpeakerSupportedFeaturesFromJSON(json: any): SpeakerSupportedFeatures {
    return SpeakerSupportedFeaturesFromJSONTyped(json, false);
}

export function SpeakerSupportedFeaturesFromJSONTyped(json: any, ignoreDiscriminator: boolean): SpeakerSupportedFeatures {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'permittedSynthesisMorphing': !exists(json, 'permitted_synthesis_morphing') ? undefined : json['permitted_synthesis_morphing'],
    };
}

export function SpeakerSupportedFeaturesToJSON(value?: SpeakerSupportedFeatures | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'permitted_synthesis_morphing': value.permittedSynthesisMorphing,
    };
}

