name: "Download VOICEVOX ENGINE"
description: |
  VOICEVOX ENGINEをダウンロードし、指定したディレクトリに展開する。
inputs:
  version:
    description: "VOICEVOX ENGINEのバージョン。latest、preview（デフォルト）、バージョン番号（例：0.7.2）で指定できる。"
    required: false
    default: "preview"
  dest:
    description: "VOICEVOX ENGINEを展開するディレクトリ。"
    required: true

outputs:
  run_path:
    description: "run.exe、またはrunのパス。"
    value: ${{ steps.result.outputs.run_path }}
  version:
    description: "VOICEVOX ENGINEのバージョン。"
    value: ${{ steps.result.outputs.version }}
runs:
  using: "composite"
  steps:
    - name: Setup tempdir
      shell: bash
      run: |
        TEMPDIR=$(echo ${{ runner.temp }} | sed -e 's_\\_/_g')
        echo TEMPDIR=$TEMPDIR >> $GITHUB_ENV
        mkdir -p $TEMPDIR
    - name: Get version
      shell: bash
      run: |
        curl -s https://api.github.com/repos/Hiroshiba/voicevox_engine/releases \
            -H 'authorization: Bearer ${{ github.token }}' \
            -H 'content-type: application/json' > $TEMPDIR/releases.json

        if [ "${{ inputs.version }}" = "latest" ]; then
          cat $TEMPDIR/releases.json | jq -er '[.[] | select(.prerelease == false)][0]' > $TEMPDIR/target.json
        elif [ "${{ inputs.version }}" = "preview" ]; then
          cat $TEMPDIR/releases.json | jq -er '[.[] | select(.prerelease == true)][0]' > $TEMPDIR/target.json
        else
          cat $TEMPDIR/releases.json | jq -er '[.[] | select(.tag_name == "v${{ inputs.version }}")][0]' > $TEMPDIR/target.json
        fi
    - name: Download engine
      shell: bash
      run: |
        OS="${{ runner.os }}"
        cat $TEMPDIR/target.json | jq -r '[.assets[] | select(.name | contains("${OS,,}-cpu") and endswith(".7z.txt"))][0]' > $TEMPDIR/assets_txt.json
        cat $TEMPDIR/assets_txt.json | jq -r '.browser_download_url' | xargs curl -sSL > $TEMPDIR/download_name.txt
        parallel 'cat $TEMPDIR/target.json | jq -r "[.assets[] | select(.name == \"{}\")][0].browser_download_url" | xargs curl -sSL > $TEMPDIR/{.}' :::: $TEMPDIR/download_name.txt
        cat $TEMPDIR/download_name.txt | sed -e 's|^|${{ runner.temp }}\/|' xargs cat > $TEMPDIR/engine.7z
    - name: Extract engine
      shell: bash
      run: |
        7z x $TEMPDIR/engine.7z -o${{ inputs.dest }}
        mv ${{ inputs.dest }}/* ${{ inputs.engine-directory }}/
    - name: Set output
      id: result
      shell: bash
      run: |
        if [ "${{ runner.os }}" = "Windows" ]; then
          echo run_path="${{ inputs.dest }}\run.exe" >> $GITHUB_OUTPUT
        else
          echo run_path="${{ inputs.dest }}/run" >> $GITHUB_OUTPUT
        fi
        cat $TEMPDIR/target.json | jq -r '.tag_name' >> $GITHUB_OUTPUT
