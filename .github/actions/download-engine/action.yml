name: "Download VOICEVOX ENGINE"
description: |
  VOICEVOX ENGINEをダウンロードし、指定したディレクトリに展開する。
inputs:
  version:
    description: "VOICEVOX ENGINEのバージョン。latest、preview（デフォルト）、バージョン番号（例：0.7.2）で指定できる。"
    required: false
    default: "preview"
  dest:
    description: "VOICEVOX ENGINEを展開するディレクトリ。"
    required: true

outputs:
  run_path:
    description: "run.exe、またはrunのパス。"
    value: ${{ steps.result.outputs.run_path }}
  version:
    description: "VOICEVOX ENGINEのバージョン。"
    value: ${{ steps.result.outputs.version }}
runs:
  using: "composite"
  steps:
    - name: Setup tempdir
      shell: bash
      run: |
        TEMPDIR=$(echo '${{ runner.temp }}' | sed -e 's_\\_/_g')
        echo TEMPDIR=$TEMPDIR >> $GITHUB_ENV
        mkdir -p $TEMPDIR

        DEST=$(echo '${{ inputs.dest }}' | sed -e 's_\\_/_g')
        echo DEST=$DEST >> $GITHUB_ENV

    - name: Get version
      shell: bash
      run: |
        curl -s https://api.github.com/repos/voicevox/voicevox_engine/releases \
            -H 'authorization: Bearer ${{ github.token }}' \
            -H 'content-type: application/json' > $TEMPDIR/releases.json

        if [ "${{ inputs.version }}" = "latest" ]; then
          cat $TEMPDIR/releases.json | jq -er '[.[] | select(.prerelease == false)][0]' > $TEMPDIR/target.json
        elif [ "${{ inputs.version }}" = "preview" ]; then
          cat $TEMPDIR/releases.json | jq -er '[.[] | select(.prerelease == true)][0]' > $TEMPDIR/target.json
        else
          cat $TEMPDIR/releases.json | jq -er '[.[] | select(.tag_name == "v${{ inputs.version }}")][0]' > $TEMPDIR/target.json
        fi
    - name: Download and Extract
      shell: bash
      run: |
        OS="${{ runner.os }}"
        cat $TEMPDIR/target.json | jq -er '[.assets[] | select(.name | contains("'${OS,,}'-cpu") and endswith(".7z.txt"))][0]' > $TEMPDIR/assets_txt.json
        LIST_URL=$(cat $TEMPDIR/assets_txt.json | jq -er '.browser_download_url')
        echo "7z.txt url: $LIST_URL"
        echo $LIST_URL | xargs curl -sSL > $TEMPDIR/download_name.txt
        echo "Files to download:"
        cat $TEMPDIR/download_name.txt | sed -e 's|^|- |'
        for i in $(cat $TEMPDIR/download_name.txt); do
          URL=$(cat $TEMPDIR/target.json | jq -er "[.assets[] | select(.name == \"$i\")][0].browser_download_url")
          echo "Download url: $URL, dest: $TEMPDIR/$i"
          curl -sSL $URL -o $TEMPDIR/$i &
        done
        for job in `jobs -p`; do
          wait $job
        done
        cat $TEMPDIR/download_name.txt | sed -e 's|^|'$TEMPDIR'/|' > $TEMPDIR/download_path.txt
        cat $TEMPDIR/download_path.txt | xargs 7z x -y -o$DEST
        mv $DEST/* $DEST/
    - name: Set output
      id: result
      shell: bash
      run: |
        if [ "${{ runner.os }}" = "Windows" ]; then
          echo "run_path=$DEST/run.exe" >> $GITHUB_OUTPUT
        else
          echo "run_path=$DEST/run" >> $GITHUB_OUTPUT
        fi
        cat $TEMPDIR/target.json | jq -r '.tag_name' | sed -e 's_^_version=_' >> $GITHUB_OUTPUT
